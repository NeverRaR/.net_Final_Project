// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SyaBackend;

namespace SyaBackend.Migrations
{
    [DbContext(typeof(SyaDbContext))]
    [Migration("20210611101316_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("SyaBackend.Models.Like", b =>
                {
                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("WorkId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("SyaBackend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("Bank")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Sale")
                        .HasColumnType("longtext");

                    b.Property<string>("Salt")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SyaBackend.Models.Work", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Cover")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("EndDay")
                        .HasColumnType("longtext");

                    b.Property<string>("EndTime")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("StartDay")
                        .HasColumnType("longtext");

                    b.Property<string>("StartTime")
                        .HasColumnType("longtext");

                    b.Property<int?>("TeacherUserId")
                        .HasColumnType("int");

                    b.Property<int>("WeekDay")
                        .HasColumnType("int");

                    b.HasKey("WorkId");

                    b.HasIndex("TeacherUserId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("SyaBackend.Models.Like", b =>
                {
                    b.HasOne("SyaBackend.Models.User", null)
                        .WithMany("Likes")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SyaBackend.Models.Work", null)
                        .WithMany("Likes")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SyaBackend.Models.Work", b =>
                {
                    b.HasOne("SyaBackend.Models.User", "Teacher")
                        .WithMany("Works")
                        .HasForeignKey("TeacherUserId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SyaBackend.Models.User", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("SyaBackend.Models.Work", b =>
                {
                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
